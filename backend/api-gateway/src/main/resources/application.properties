#Server port
server.port= 8900

#Application name
spring.application.name= api-gateway

#Application type
spring.main.web-application-type=reactive

#Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true

#Gateway Routes Configuration
spring.cloud.gateway.discovery.locator.enabled=false

# User service route
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/accounts/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/accounts/(?<segment>.*), /$\{segment}

# User authentication route
spring.cloud.gateway.routes[1].id=user-auth-service
spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/auth/(?<segment>.*), /$\{segment}

# Catalog service route (áp dụng cho tất cả API sản phẩm, category, brand)
spring.cloud.gateway.routes[2].id=product-catalog-service
spring.cloud.gateway.routes[2].uri=lb://PRODUCT-CATALOG-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/catalog/products/**,/api/catalog/categories/**,/api/catalog/brands/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/catalog/(?<segment>.*), /${segment}

# Product images route
spring.cloud.gateway.routes[3].id=product-images-service
spring.cloud.gateway.routes[3].uri=lb://PRODUCT-CATALOG-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/catalog/images/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/catalog/images/(?<segment>.*), /images/${segment}

# Order service route
spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/shop/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/shop/(?<segment>.*), /shop/${segment}
spring.cloud.gateway.routes[4].filters[1]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.routes[4].filters[2]=AddResponseHeader=Access-Control-Allow-Origin, *
spring.cloud.gateway.routes[4].filters[3]=PreserveHostHeader=true
spring.cloud.gateway.routes[4].filters[4]=AddResponseHeader=Access-Control-Allow-Credentials, true

# Recommendation service route
spring.cloud.gateway.routes[5].id=product-recommendation-service
spring.cloud.gateway.routes[5].uri=lb://PRODUCT-RECOMMENDATION-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/review/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/api/review/(?<segment>.*), /${segment}

# Admin Product/Category/Brand service route (áp dụng cho tất cả API admin)
spring.cloud.gateway.routes[6].id=admin-product-service
spring.cloud.gateway.routes[6].uri=lb://PRODUCT-CATALOG-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/admin/products/**,/admin/categories/**,/admin/brands/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/admin/(?<segment>.*), /admin/${segment}

spring.cloud.gateway.routes[7].id=admin-product-catalog-service
spring.cloud.gateway.routes[7].uri=lb://PRODUCT-CATALOG-SERVICE
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/catalog/admin/products/**,/api/catalog/admin/categories/**,/api/catalog/admin/brands/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/api/catalog/admin/(?<segment>.*), /admin/${segment}

# User service direct route for /api/users/**
spring.cloud.gateway.routes[8].id=user-service-direct
spring.cloud.gateway.routes[8].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/api/users/(?<segment>.*), /users/${segment}

#Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379

#Session Configuration
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=false
spring.session.store-type=redis
spring.session.redis.namespace=spring:session
spring.session.redis.flush-mode=on-save

# Global CORS configuration
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=Set-Cookie
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600

# Default filters
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST
spring.cloud.gateway.default-filters[1]=PreserveHostHeader

# Additional configurations
spring.cloud.gateway.httpclient.wiretap=true
spring.cloud.gateway.httpclient.pool.type=elastic
spring.cloud.gateway.httpclient.connect-timeout=2000
spring.cloud.gateway.httpclient.response-timeout=5s

#Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.reactor.netty.http.client=DEBUG